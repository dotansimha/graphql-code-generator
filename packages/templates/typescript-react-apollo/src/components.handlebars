import * as ReactApollo from 'react-apollo';
import * as React from 'react';

{{#unless @root.config.noGraphqlTag}}
import gql from 'graphql-tag';
{{/unless}}

{{#each operations }}
    {{#unless @root.config.noNamespaces}}
    export namespace {{toPascalCase name}} {
    {{/unless}}

        export interface {{#if @root.config.noNamespaces}}{{ toPascalCase name }}{{/if}}ComponentProps {
            {{ toLowerCase operationType }}?: any;
            variables?: {{#if @root.config.noNamespaces}}{{ toPascalCase name }}{{/if}}Variables;
            children: (result: ReactApollo.QueryResult<{{#if @root.config.noNamespaces}}{{ toPascalCase name }}{{/if}}{{toPascalCase operationType}}, {{#if @root.config.noNamespaces}}{{ toPascalCase name }}{{/if}}Variables>) => React.ReactNode;
        };
        export class {{#if @root.config.noNamespaces}}{{ toPascalCase name }}{{/if}}Component extends React.Component<{{#if @root.config.noNamespaces}}{{ toPascalCase name }}{{/if}}ComponentProps> {
            render(){
                return (
                    <ReactApollo.{{ toPascalCase operationType }}<{{#if @root.config.noNamespaces}}{{ toPascalCase name }}{{/if}}{{toPascalCase operationType}}, {{#if @root.config.noNamespaces}}{{ toPascalCase name }}{{/if}}Variables>
                    {{ toLowerCase operationType }}={ {{#unless @root.config.noGraphqlTag}}gql` {{{ document }}} `{{else}}{{{ gql document }}}{{/unless}} }
                    {...this.props}
                    />
                );
            }
        }   
    {{#unless @root.config.noNamespaces}}
    }
    {{/unless}}
{{/each}}