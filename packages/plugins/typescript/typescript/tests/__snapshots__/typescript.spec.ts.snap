// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TypeScript should use implementing types as node type - issue #5126 1`] = `
"/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
};

export type Matrix = {
  __typename?: 'Matrix';
  pills: Array<RedPill | GreenPill>;
};

export type Pill = {
  id: Scalars['ID'];
};

export type RedPill = Pill & {
  __typename?: 'RedPill';
  red: Scalars['String'];
};

export type GreenPill = Pill & {
  __typename?: 'GreenPill';
  green: Scalars['String'];
};

export type Foo = {
  id: Scalars['ID'];
};

export type Bar = Foo & {
  __typename?: 'Bar';
  lol: Scalars['String'];
};

export type Hello = {
  __typename?: 'Hello';
  foo: Bar;
};

export type NoInterface = {
  __typename?: 'NoInterface';
  hello: Hello;
};

export type NestedInterface = {
  field: Scalars['String'];
};

export type NestedType1 = NestedInterface & {
  __typename?: 'NestedType1';
  hi: Scalars['String'];
};

export type NestedType2 = NestedInterface & {
  __typename?: 'NestedType2';
  ho: Scalars['String'];
};

export type NestedField = {
  __typename?: 'NestedField';
  nested: NestedType1 | NestedType2;
};
"
`;
