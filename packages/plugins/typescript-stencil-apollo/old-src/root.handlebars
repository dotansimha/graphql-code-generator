{{#ifCond operations.length '!==' 0}}

{{#unless @root.config.noGraphqlTag}}
import gql from 'graphql-tag';
{{/unless}}

{{ blockCommentIf 'Fragments' fragments }}
{{{generateFragments fragments}}}

{{ blockCommentIf 'Components' operations }}
{{#each operations }}
    {{#unless @root.config.noNamespaces}}
export namespace {{convert name 'typeNames'}} {
    {{/unless}}
    export const {{#if @root.config.noNamespaces}}{{ convert name 'typeNames' }}{{/if}}Document = {{{ gql this }}};
    export interface {{#if @root.config.noNamespaces}}{{ convert name 'typeNames' }}{{/if}}ComponentProps {
        variables ?: {{#if @root.config.noNamespaces}}{{ convert name 'typeNames' }}{{/if}}Variables;
        onReady ?: import('stencil-apollo/dist/types/components/apollo-{{ toLowerCase operationType }}/types').On{{ toPascalCase operationType }}ReadyFn<{{#if @root.config.noNamespaces}}{{ convert name }}{{/if}}{{ toPascalCase operationType }}, {{#if @root.config.noNamespaces}}{{ convert name }}{{/if}}Variables>;
    }
     export const {{#if @root.config.noNamespaces}}{{ convert name 'typeNames' }}{{/if}}Component = (props: {{#if @root.config.noNamespaces}}{{ convert name 'typeNames' }}{{/if}}ComponentProps) => <apollo-{{ toLowerCase operationType }} {{ toLowerCase operationType }}={ {{#if @root.config.noNamespaces}}{{ convert name 'typeNames' }}{{/if}}Document } {...props} />;
    {{#unless @root.config.noNamespaces}}
}
    {{/unless}}
{{/each}}
{{/ifCond}}
